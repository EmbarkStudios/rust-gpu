window.SIDEBAR_ITEMS = {"enum":[["Entry","A view into a single entry in a map, which may either be vacant or occupied."],["RawEntryMut","A view into a single entry in a map, which may either be vacant or occupied."]],"struct":[["Drain","A draining iterator over the entries of a `HashMap`."],["DrainFilter","A draining iterator over entries of a `HashMap` which donâ€™t satisfy the predicate `f`."],["HashMap","A hash map implemented with quadratic probing and SIMD lookup."],["IntoIter","An owning iterator over the entries of a `HashMap`."],["Iter","An iterator over the entries of a `HashMap`."],["IterMut","A mutable iterator over the entries of a `HashMap`."],["Keys","An iterator over the keys of a `HashMap`."],["OccupiedEntry","A view into an occupied entry in a `HashMap`. It is part of the `Entry` enum."],["OccupiedError","The error returned by `try_insert` when the key already exists."],["RawEntryBuilder","A builder for computing where in a [`HashMap`] a key-value pair would be stored."],["RawEntryBuilderMut","A builder for computing where in a [`HashMap`] a key-value pair would be stored."],["RawOccupiedEntryMut","A view into an occupied entry in a `HashMap`. It is part of the `RawEntryMut` enum."],["RawVacantEntryMut","A view into a vacant entry in a `HashMap`. It is part of the `RawEntryMut` enum."],["VacantEntry","A view into a vacant entry in a `HashMap`. It is part of the `Entry` enum."],["Values","An iterator over the values of a `HashMap`."],["ValuesMut","A mutable iterator over the values of a `HashMap`."]],"type":[["DefaultHashBuilder","Default hasher for `HashMap`."]]};