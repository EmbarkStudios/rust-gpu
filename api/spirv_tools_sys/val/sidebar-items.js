window.SIDEBAR_ITEMS = {"enum":[["ValidatorLimits",""]],"fn":[["validate","Validates a SPIR-V binary for correctness. Any errors will be written into *diagnostic if diagnostic is non-null, otherwise the context’s message consumer will be used."],["validate_with_options","Validates a SPIR-V binary for correctness. Uses the provided Validator options. Any errors will be written into *diagnostic if diagnostic is non-null, otherwise the context’s message consumer will be used."],["validator_options_create","Creates a Validator options object with default options. Returns a valid options object. The object remains valid until it is passed into spvValidatorOptionsDestroy."],["validator_options_destroy","Destroys the given Validator options object."],["validator_options_set_before_legalization","Records whether or not the validator should relax the rules because it is expected that the optimizations will make the code legal."],["validator_options_set_limit","Records the maximum Universal Limit that is considered valid in the given Validator options object.  argument must be a valid options object."],["validator_options_set_relax_block_layout","Records whether the validator should use “relaxed” block layout rules. Relaxed layout rules are described by Vulkan extension VK_KHR_relaxed_block_layout, and they affect uniform blocks, storage blocks, and push constants."],["validator_options_set_relax_logical_pointer","Records whether or not the validator should relax the rules on pointer usage in logical addressing mode."],["validator_options_set_relax_store_struct","Record whether or not the validator should relax the rules on types for stores to structs.  When relaxed, it will allow a type mismatch as long as the types are structs with the same layout.  Two structs have the same layout if"],["validator_options_set_scalar_block_layout","Records whether the validator should use “scalar” block layout rules. Scalar layout rules are more permissive than relaxed block layout."],["validator_options_set_skip_block_layout","Records whether or not the validator should skip validating standard uniform/storage block layout."],["validator_options_set_uniform_buffer_standard_layout","Records whether the validator should use standard block layout rules for uniform blocks."]],"struct":[["ValidatorOptions",""]]};