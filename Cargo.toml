[workspace]
resolver = "2"
members = [
    "examples/runners/cpu",
    "examples/runners/ash",
    "examples/runners/wgpu",
    "examples/runners/wgpu/builder",
    "examples/shaders/reduce",
    "examples/shaders/sky-shader",
    "examples/shaders/simplest-shader",
    "examples/shaders/compute-shader",
    "examples/shaders/mouse-shader",
    "examples/multibuilder",

    "crates/rustc_codegen_spirv",
    "crates/rustc_codegen_spirv-types",
    "crates/spirv-builder",
    "crates/spirv-std",
    "crates/spirv-std/shared",
    "crates/spirv-std/macros",

    "tests",
    "tests/deps-helper",
]

[workspace.package]
version = "0.6.1"
authors = ["Embark <opensource@embark-studios.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/EmbarkStudios/rust-gpu"

[workspace.dependencies]
spirv-std = { path = "./crates/spirv-std", version = "=0.6.1" }
spirv-std-types = { path = "./crates/spirv-std/shared", version = "=0.6.1" }
spirv-std-macros = { path = "./crates/spirv-std/macros", version = "=0.6.1" }
spirv-builder = { path = "./crates/spirv-builder", version = "=0.6.1", default-features = false  }
rustc_codegen_spirv = { path = "./crates/rustc_codegen_spirv", version = "=0.6.1", default-features = false }
rustc_codegen_spirv-types = { path = "./crates/rustc_codegen_spirv-types", version = "=0.6.1" }

# Enable incremental by default in release mode.
[profile.release]
incremental = true
# HACK(eddyb) this is the default but without explicitly specifying it, Cargo
# will treat the identical settings in `[profile.release.build-override]` below
# as different sets of `rustc` flags and will not reuse artifacts between them.
codegen-units = 256

# Compile build-dependencies in release mode with the same settings
# as regular dependencies (including the incremental enabled above).
[profile.release.build-override]
opt-level = 3
incremental = true
codegen-units = 256
