[workspace]
resolver = "2"

[package]
name = "rustc_codegen_spirv"
description = "SPIR-V code generator backend for rustc"
documentation = "https://embarkstudios.github.io/rust-gpu/api/rustc_codegen_spirv/index.html"
# FIXME(eddyb) automate checking these against the root workspace.
version = "0.9.0"
authors = ["Embark <opensource@embark-studios.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/EmbarkStudios/rust-gpu"

[lib]
crate-type = ["dylib"]

[features]
# By default, the use-compiled-tools is enabled, as doesn't require additional
# setup steps for the user. This does however mean that you will need to disable
# default features and explicitly enable `use-installed-tools` if you are using
# this in an environment with spirv-tools in PATH, and you don't want to take
# the compile time cost
default = ["use-compiled-tools"]
# If enabled, uses spirv-tools binaries installed in PATH, instead of
# compiling and linking the spirv-tools C++ code
use-installed-tools = ["spirv-tools/use-installed-tools"]
# If enabled will compile and link the C++ code for the spirv tools, the compiled
# version is preferred if both this and `use-installed-tools` are enabled
use-compiled-tools = ["spirv-tools/use-compiled-tools"]

[dependencies]
# HACK(eddyb) quasi-workspace dependencies (this is a separate workspace sadly).
rustc_codegen_spirv-types = { path = "../rustc_codegen_spirv-types", version = "=0.9.0" }

ar = "0.9.0"
either = "1.8.0"
indexmap = "1.6.0"
num-traits = "0.2"
rspirv = "0.11"
rustc-demangle = "0.1.21"
sanitize-filename = "0.4"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
smallvec = { version = "1.6.1", features = ["union"] }
spirv-tools = { version = "0.9", default-features = false }
spirt = "0.3.0"
lazy_static = "1.4.0"
itertools = "0.10.5"

[dev-dependencies]
pipe = "0.4"
pretty_assertions = "1.0"
tempfile = "3.4"

# Note that in order to use RA and have access to `rustc_*` crates, you also
# need to set `"rust-analyzer.rustcSource": "discover"` in e.g. VSCode.
[package.metadata.rust-analyzer]
# This crate uses #[feature(rustc_private)]
rustc_private = true

# Enable incremental by default in release mode, as well.
[profile.release]
incremental = true
